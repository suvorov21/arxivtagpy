stages:
  - build
  - test
  - deploy

include:
  - template: Security/SAST.gitlab-ci.yml

sast:
  stage: test

syntax_test:
  stage: build
  image:
    python:3.9.9-slim-buster
  before_script:
    - python3 -m pip install --ignore-installed -r requirements.txt
  script:
    - python3 -m py_compile app/*.py

assets_build:
    stage: build
    image: node:16.9.0-alpine3.14
    before_script:
      - cd app/frontend/src/
      - npm install
    script:
        - npm run build
    artifacts:
      paths:
        - app/frontend/dist/js/*

integration_test:
  stage: test
  image:
    python:3.9.9-slim-buster
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: arxiv_test
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: tester
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - python3 -m pip install --ignore-installed -r requirements.txt
    - apt update
    - apt install -y chromium chromium-driver wget
    - mv .env_example .env
    - sed -i '/log_cli_level = 10/d' test/pytest.ini
  script:
    - pytest --cov=app --junitxml=report.xml test/
    - coverage xml -o coverage.xml
    - wget https://coverage.codacy.com/get.sh
    - . get.sh report -r coverage.xml
  artifacts:
    reports:
      cobertura: coverage.xml
      junit: report.xml

stage_to_beta:
  stage: deploy
  tags:
    - deploy
  environment:
    name: staging
    url: https://beta.arxivtag.tk/
  script:
    - cd "$CD_STAGE_PATH"
    - source update.sh
  only:
    - develop

prod:
  stage: deploy
  tags:
    - deploy
  environment:
    name: production
    url: https://arxivtag.tk/
  script:
    - cd "$CD_PROD_PATH"
    - source update.sh
  only:
    - master

# stage_to_beta:
#   stage: stage
#   image:
#     alpine:latest
#   before_script:
#     - apk add lftp
#   script:
#     - lftp -e "set ssl:verify-certificate no; open $FTP_HOST; user $FTP_NAME $FTP_PASS; mirror -X .* -X .*/ -X __pycache__/* -X *.wsgi -X wsgi.py -X .env -X *.json --reverse --verbose --delete /builds/suvorov21/arxivtagpy/ public_html/beta/flask/; bye"
#   only:
#     - develop

# production_ftp:
#   type: deploy
#   stage: production
#   image:
#     alpine:latest
#   before_script:
#     - apk add lftp
#   script:
#     - lftp -e "set ssl:verify-certificate no; open $FTP_HOST; user $FTP_NAME $FTP_PASS; mirror -X .* -X .*/ -X __pycache__/* -X *.wsgi -X wsgi.py -X .env -X *.json -X *.log --reverse --verbose --delete /builds/suvorov21/arxivtagpy/ public_html/prod/flask/; bye"
#   only:
#     - master

# HEROKU PRODUCTION
# production_heroku:
#     type: deploy
#     stage: production
#     before_script:
#       - apt-get update -qy
#       - apt-get install -y ruby-dev
#       - gem install dpl
#     script:
#         - dpl --provider=heroku --skip_cleanup --app=$ARXIVTAG_PRODUCTION --api-key=$HEROKU_API_KEY
#     only:
#         - master
